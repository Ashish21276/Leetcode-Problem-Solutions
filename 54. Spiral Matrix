class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> res = new ArrayList<>();
        int minr = 0;
        int minc = 0;
        int maxr = matrix.length - 1;
        int maxc = matrix[0].length - 1;
        int total = (maxr + 1) * (maxc + 1);
        int count = 0;
        while (count < total) {
            for (int i = minc; i <= maxc && count < total; i++) {
                res.add(matrix[minr][i]);
                count++;
            }
            minr++;
            for (int i = minr; i <= maxr && count < total; i++) {
                res.add(matrix[i][maxc]);
                count++;
            }
            maxc--;
            for (int i = maxc; i >= minc && count < total; i--) {
                res.add(matrix[maxr][i]);
                count++;
            }
            maxr--;
            for (int i = maxr; i >= minr && count < total; i--) {
                res.add(matrix[i][minc]);
                count++;
            }
            minc++;
        }
        return res;
    }
}
